#!/bin/bash

#Scriptname - Exploit ToolBox
#Author - Liam Kazmerchuk
#Date - 04/09/2021
#Revised - 04/12/2021


#This variable keeps the output of the option to display for 5 seconds
DELAY=5


#Variables to change colour of script while running
GREEN='\033[0;32m'

#The while loop acts as a skeleton to house the if statements for later use.
while [[ "$REPLY" != 0 ]]; do
        clear #Clears the terminal
        echo -e "\e[38;5;82mStarting \e[38;5;198mScript...." #Funky colours that display starting script. Added colours for a bit of pizazz
        for i in {16..21} {21..16} ; do echo -en "\e[38;5;${i}m###################\e[0m" ; done ; echo #Creates a blue fade effect again only for aesthetics
        echo -e "$GREEN" #Changes the colour of the script to green
    cat <<-_ESO_ # Displays the options for the script.
  Please enter one of the following options(1-9):



███████╗██╗░░██╗██████╗░██╗░░░░░░█████╗░██╗████████╗  ████████╗░█████╗░░█████╗░██╗░░░░░██████╗░░█████╗░██╗░░██╗
██╔════╝╚██╗██╔╝██╔══██╗██║░░░░░██╔══██╗██║╚══██╔══╝  ╚══██╔══╝██╔══██╗██╔══██╗██║░░░░░██╔══██╗██╔══██╗╚██╗██╔╝
█████╗░░░╚███╔╝░██████╔╝██║░░░░░██║░░██║██║░░░██║░░░  ░░░██║░░░██║░░██║██║░░██║██║░░░░░██████╦╝██║░░██║░╚███╔╝░
██╔══╝░░░██╔██╗░██╔═══╝░██║░░░░░██║░░██║██║░░░██║░░░  ░░░██║░░░██║░░██║██║░░██║██║░░░░░██╔══██╗██║░░██║░██╔██╗░
███████╗██╔╝╚██╗██║░░░░░███████╗╚█████╔╝██║░░░██║░░░  ░░░██║░░░╚█████╔╝╚█████╔╝███████╗██████╦╝╚█████╔╝██╔╝╚██╗
╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚══════╝░╚════╝░╚═╝░░░╚═╝░░░  ░░░╚═╝░░░░╚════╝░░╚════╝░╚══════╝╚═════╝░░╚════╝░╚═╝░░╚═╝


Version: 0.1
Created By Liam Kazmerchuk




        General Options:

        1. Update MetaSploit
        2. Update Machine

        Exploit and Vulnerabilitie Options:

        3. Launch MSFCONSOLE
        4. Launch Hydra Application
        5. Launch DirBuster
        6. Launch HashIdentifier and Find my Hash
        7. Launch BurpSuite

        Information Gathering Options:

        8. Nmap Scans Menu


        9. Exit Script

_ESO_

        read -p "Enter Selection[1-9]: " # Acts as an input for the options above

        #If statement for updating metasploit

        if [[ "$REPLY" =~ ^[1-9]$ ]]; then

                if [[ "$REPLY" == 1 ]]; then
                        echo "Updating MetaSploit Framework"
                        echo
                        sudo apt update; apt install metasploit-framework #Updates the metasploit framework to the newest version available
                        sleep "$DELAY" #Makes the output display for 5 seconds then clears it
                        clear
                fi

                #If statement to update the machine

                if [[ "$REPLY" == 2 ]]; then
                        echo "Updating machine, this might take a while.."
                        echo
                        sudo apt-get update   #both options are used to update the machine
                        sudo apt-get upgrade -y
                        sleep "$DELAY"
                        clear
                fi


                #Starts msfconsole for exploiting purposes

                if [[ "$REPLY" == 3 ]]; then
                        echo "Starting MSFCONSOLE, Please wait.."
                        echo
                        sudo msfconsole #starts msfcosnole
                        echo
                        sleep "$DELAY"
                        clear
                fi

                #Launches RDP Hydra attack Application

                if [[ "$REPLY" == 4 ]]; then
                        echo "Launching the Hydra Interface, Please wait.."
                        echo
                        sudo xhydra #Launches hydra
                        echo
                        sleep "$DELAY"
                        clear
                fi

                #Launches dirbuster

                if [[ "$REPLY" == 5 ]]; then 
                        echo "Launching DIRBuster, Please wait.."
                        echo
                        sudo dirbuster
                        echo
                        sleep "$DELAY"
                        clear
                fi
                        #If statement for hashidentifier
                if [[ "$REPLY" == 6 ]]; then 
                        echo "Launching HashIdentifier, Please wait.."
                        echo
                        read -p "Please enter your hash here" HASH #Variable to store the hash code.
                        sudo hash-identifier $HASH #Launches and inputs the hash form before
                        echo
                        sleep "$DELAY"
                        clear
                fi
                        #If Statement for burpsuite
                if [[ "$REPLY" == 7 ]]; then 
                        echo "Launching Burpsuite, Please wait.."
                        echo
                        sudo burpsuite #Launches Burpsuite
                        echo
                        sleep "$DELAY"
                        clear
                fi


                if [[ "$REPLY" == 8  ]]; then # This if statement houses the next menu for processes
                        while [[ "$REPLY" != 0 ]]; do #while loop used for a second menu and to hold the cat statement to display the options
                                clear
                                cat <<-_ESO2_ #Displays all options for nmap scanning 


        ███╗░░██╗███╗░░░███╗░█████╗░██████╗░  ███╗░░░███╗███████╗███╗░░██╗██╗░░░██╗
        ████╗░██║████╗░████║██╔══██╗██╔══██╗  ████╗░████║██╔════╝████╗░██║██║░░░██║
        ██╔██╗██║██╔████╔██║███████║██████╔╝  ██╔████╔██║█████╗░░██╔██╗██║██║░░░██║
        ██║╚████║██║╚██╔╝██║██╔══██║██╔═══╝░  ██║╚██╔╝██║██╔══╝░░██║╚████║██║░░░██║
        ██║░╚███║██║░╚═╝░██║██║░░██║██║░░░░░  ██║░╚═╝░██║███████╗██║░╚███║╚██████╔╝
        ╚═╝░░╚══╝╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝░░░░░  ╚═╝░░░░░╚═╝╚══════╝╚═╝░░╚══╝░╚═════╝░


                                Please choose the scan you would like to use.
                                        1. Basic NMAP Scan
                                        2. Operating Systems Scan
                                        3. Firewall Settings Detection Scan
                                        4. Service Version Scan
                                        5. Popular Port Scan
                                        6. Port Scan Against Every Port
                                        7. Scan Specific Ports
                                        8. Agressive Scan
                                        9. Main Menu


                                _ESO2_

                                read -p "Please enter the Target IP Address: " ipSelect #Takes user input and stores it in a variable for later use
                                read -p "Enter Selection [1-9]: "

                                if [[ "$REPLY" =~ ^[1-9]$ ]]; then #If statement for second menu
                                        if [[ "$REPLY" == 1 ]]; then #Launches a basic nmap scan, nothing special
                                                echo "Basic NMAP Scan Launching.."
                                                echo
                                                sudo nmap $ipSelect > /home/BasicScan.txt
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                sleep "$DELAY"
                                                clear
                                        fi
                                                #If statements to scan network for firewall
                                        if [[ "$REPLY" == 2 ]]; then
                                                echo "Launching OS Scan, Please wait.."
                                                echo
                                                sudo nmap -O $ipSelect > /home/OS_Scan.txt #Launches an os scan
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                sleep "$DELAY"
                                        fi
                                                #If statement to see if the firewall is running
                                        if [[ "$REPLY" == 3 ]]; then
                                                echo "Launching Firewall Settings Detection, Please wait.."
                                                echo
                                                sudo nmap -sA $ipSelect > /home/FirewallDetection.txt #Launches a firewall scan
                                                echo
                                                echo "Scan Output sent to the /home folder"
                                                sleep "$DELAY"
                                                clear
                                        fi
                                                #If statement to scan system for service versions
                                        if [[ "$REPLY" == 4 ]]; then
                                                echo "Launching Service Scan, Please wait.."
                                                echo
                                                sudo nmap -sV $ipSelect > /home/Service_Scan.txt #Launches a service scan
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                sleep "$DELAY"
                                                clear
                                        fi
                                                #If statement to scan most popular ports
                                        if [[ "$REPLY" == 5 ]]; then
                                                echo "Launching Popular Port Scan"
                                                echo
                                                sudo nmap --top-ports 20 $ipSelect > /home/Popular_Scan.txt #Scans most popular ports
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                sleep "$DELAY"
                                                clear
                                        fi
                                                #Scans every port
                                        if [[ "$REPLY" == 6 ]]; then
                                                echo "Launching Full Port Scan, Please wait..."
                                                echo
                                                sudo nmap -sS -sU -p 1-65535 $ipSelect > /home/Full_Scan.txt #Used to scan every port on a network
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                sleep "$DELAY"
                                                clear
                                        fi
                                                #Scans user selected ports
                                        if [[ "$REPLY" == 7 ]]; then
                                                read -p "Enter the ports you would like to use ( use 1124-6234 or 42,64,76 ): " selPorts #Puts user input into a variable used to put into the ports
                                                echo
                                                echo "Launching Scan against $selPorts"
                                                sudo nmap -sS $selPorts $ipSelect > /home/Specific_Ports.txt #Scans user selected ports with the variables described and outputs to a txt file
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                sleep "$DELAY"
                                                clear
                                        fi

                                        #Launches an agressive scan

                                        if [[ "$REPLY" == 8 ]]; then
                                                echo "Launching a full agressive scan, this will take a while.."
                                                echo
                                                sudo nmap -A -p 1-65535 $ipSelect > /home/AGRESSIVE_SCAN.txt #Scans everything a network has to offer and every port then outputs to a text folder
                                                echo
                                                echo "Scan output sent to the /home folder"
                                                clear
                                        fi

                                        if [[ "$REPLY" == 9 ]]; then #Sends the user back to the main menu
                                                sudo bash finalscript
                                                clear
                                        fi

                                else
                                        echo "Invalid Entry, Please Enter Again." # Only prints in case of a number over the ones listed
                                        sleep "$DELAY"
                                fi
                                done
                        fi

                if [[ "$REPLY" == 9 ]]; then
                        echo "Exiting Script." #Displays only when exiting the script
                        exit
                fi

        else
                echo "Invalid Entry, Please Enter Again."
                sleep "$DELAY"
        fi

done
